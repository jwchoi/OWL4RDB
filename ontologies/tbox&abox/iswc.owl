Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(:=<http://foo.example/iswc/#>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(skos:=<http://www.w3.org/2004/02/skos/core#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)

Ontology(<http://foo.example/iswc/>

Declaration(Class(:conferences))
Declaration(DataProperty(:dp_conferences.ConfID))
DataPropertyRange(:dp_conferences.ConfID xsd:integer)
Declaration(Class(:conferences.ConfID))
Declaration(ObjectProperty(:op_conferences.ConfID))
ObjectPropertyDomain(:op_conferences.ConfID :conferences)
ObjectPropertyRange(:op_conferences.ConfID :conferences.ConfID)
DataPropertyDomain(:dp_conferences.ConfID :conferences.ConfID)
HasKey(:conferences.ConfID () (:dp_conferences.ConfID))
SubClassOf(:conferences.ConfID DataAllValuesFrom(:dp_conferences.ConfID xsd:integer))
SubClassOf(:conferences.ConfID DataExactCardinality(1 :dp_conferences.ConfID xsd:integer))
SubClassOf(:conferences ObjectAllValuesFrom(:op_conferences.ConfID :conferences.ConfID))
SubClassOf(:conferences ObjectExactCardinality(1 :op_conferences.ConfID :conferences.ConfID))
Declaration(DataProperty(:dp_conferences.Name))
DataPropertyRange(:dp_conferences.Name xsd:string)
DataPropertyDomain(:dp_conferences.Name :conferences)
SubClassOf(:conferences DataAllValuesFrom(:dp_conferences.Name xsd:string))
SubClassOf(:conferences DataMaxCardinality(1 :dp_conferences.Name xsd:string))
Declaration(DataProperty(:dp_conferences.URI))
DataPropertyRange(:dp_conferences.URI xsd:string)
DataPropertyDomain(:dp_conferences.URI :conferences)
SubClassOf(:conferences DataAllValuesFrom(:dp_conferences.URI xsd:string))
SubClassOf(:conferences DataMaxCardinality(1 :dp_conferences.URI xsd:string))
Declaration(DataProperty(:dp_conferences.Date))
DataPropertyRange(:dp_conferences.Date xsd:string)
DataPropertyDomain(:dp_conferences.Date :conferences)
SubClassOf(:conferences DataAllValuesFrom(:dp_conferences.Date xsd:string))
SubClassOf(:conferences DataMaxCardinality(1 :dp_conferences.Date xsd:string))
Declaration(DataProperty(:dp_conferences.Location))
DataPropertyRange(:dp_conferences.Location xsd:string)
DataPropertyDomain(:dp_conferences.Location :conferences)
SubClassOf(:conferences DataAllValuesFrom(:dp_conferences.Location xsd:string))
SubClassOf(:conferences DataMaxCardinality(1 :dp_conferences.Location xsd:string))
Declaration(DataProperty(:dp_conferences.Datum))
DataPropertyRange(:dp_conferences.Datum xsd:dateTime)
DataPropertyDomain(:dp_conferences.Datum :conferences)
SubClassOf(:conferences DataAllValuesFrom(:dp_conferences.Datum xsd:dateTime))
SubClassOf(:conferences DataMaxCardinality(1 :dp_conferences.Datum xsd:dateTime))
HasKey(:conferences (:op_conferences.ConfID) ())
Declaration(Class(:organizations))
Declaration(DataProperty(:dp_organizations.OrgID))
DataPropertyRange(:dp_organizations.OrgID xsd:integer)
Declaration(Class(:organizations.OrgID))
Declaration(ObjectProperty(:op_organizations.OrgID))
ObjectPropertyDomain(:op_organizations.OrgID :organizations)
ObjectPropertyRange(:op_organizations.OrgID :organizations.OrgID)
DataPropertyDomain(:dp_organizations.OrgID :organizations.OrgID)
HasKey(:organizations.OrgID () (:dp_organizations.OrgID))
SubClassOf(:organizations.OrgID DataAllValuesFrom(:dp_organizations.OrgID xsd:integer))
SubClassOf(:organizations.OrgID DataExactCardinality(1 :dp_organizations.OrgID xsd:integer))
SubClassOf(:organizations ObjectAllValuesFrom(:op_organizations.OrgID :organizations.OrgID))
SubClassOf(:organizations ObjectExactCardinality(1 :op_organizations.OrgID :organizations.OrgID))
Declaration(DataProperty(:dp_organizations.Type))
DataPropertyRange(:dp_organizations.Type xsd:string)
DataPropertyDomain(:dp_organizations.Type :organizations)
SubClassOf(:organizations DataAllValuesFrom(:dp_organizations.Type xsd:string))
SubClassOf(:organizations DataMaxCardinality(1 :dp_organizations.Type xsd:string))
Declaration(DataProperty(:dp_organizations.Name))
DataPropertyRange(:dp_organizations.Name xsd:string)
DataPropertyDomain(:dp_organizations.Name :organizations)
SubClassOf(:organizations DataAllValuesFrom(:dp_organizations.Name xsd:string))
SubClassOf(:organizations DataMaxCardinality(1 :dp_organizations.Name xsd:string))
Declaration(DataProperty(:dp_organizations.Address))
DataPropertyRange(:dp_organizations.Address xsd:string)
DataPropertyDomain(:dp_organizations.Address :organizations)
SubClassOf(:organizations DataAllValuesFrom(:dp_organizations.Address xsd:string))
SubClassOf(:organizations DataMaxCardinality(1 :dp_organizations.Address xsd:string))
Declaration(DataProperty(:dp_organizations.Location))
DataPropertyRange(:dp_organizations.Location xsd:string)
DataPropertyDomain(:dp_organizations.Location :organizations)
SubClassOf(:organizations DataAllValuesFrom(:dp_organizations.Location xsd:string))
SubClassOf(:organizations DataMaxCardinality(1 :dp_organizations.Location xsd:string))
Declaration(DataProperty(:dp_organizations.Postcode))
DataPropertyRange(:dp_organizations.Postcode xsd:string)
DataPropertyDomain(:dp_organizations.Postcode :organizations)
SubClassOf(:organizations DataAllValuesFrom(:dp_organizations.Postcode xsd:string))
SubClassOf(:organizations DataMaxCardinality(1 :dp_organizations.Postcode xsd:string))
Declaration(DataProperty(:dp_organizations.Country))
DataPropertyRange(:dp_organizations.Country xsd:string)
DataPropertyDomain(:dp_organizations.Country :organizations)
SubClassOf(:organizations DataAllValuesFrom(:dp_organizations.Country xsd:string))
SubClassOf(:organizations DataMaxCardinality(1 :dp_organizations.Country xsd:string))
Declaration(DataProperty(:dp_organizations.URI))
DataPropertyRange(:dp_organizations.URI xsd:string)
DataPropertyDomain(:dp_organizations.URI :organizations)
SubClassOf(:organizations DataAllValuesFrom(:dp_organizations.URI xsd:string))
SubClassOf(:organizations DataMaxCardinality(1 :dp_organizations.URI xsd:string))
Declaration(DataProperty(:dp_organizations.Belongsto))
DataPropertyRange(:dp_organizations.Belongsto xsd:integer)
Declaration(Class(:organizations.Belongsto))
Declaration(ObjectProperty(:op_organizations.Belongsto))
ObjectPropertyDomain(:op_organizations.Belongsto :organizations)
ObjectPropertyRange(:op_organizations.Belongsto :organizations.Belongsto)
DataPropertyDomain(:dp_organizations.Belongsto :organizations.Belongsto)
HasKey(:organizations.Belongsto () (:dp_organizations.Belongsto))
SubClassOf(:organizations.Belongsto DataAllValuesFrom(:dp_organizations.Belongsto xsd:integer))
SubClassOf(:organizations.Belongsto DataExactCardinality(1 :dp_organizations.Belongsto xsd:integer))
SubClassOf(:organizations ObjectAllValuesFrom(:op_organizations.Belongsto :organizations.Belongsto))
SubClassOf(:organizations ObjectMaxCardinality(1 :op_organizations.Belongsto :organizations.Belongsto))
SubClassOf(:organizations.Belongsto :organizations.OrgID)
SubDataPropertyOf(:dp_organizations.Belongsto :dp_organizations.OrgID)
Declaration(DataProperty(:dp_organizations.Homepage))
DataPropertyRange(:dp_organizations.Homepage xsd:string)
DataPropertyDomain(:dp_organizations.Homepage :organizations)
SubClassOf(:organizations DataAllValuesFrom(:dp_organizations.Homepage xsd:string))
SubClassOf(:organizations DataMaxCardinality(1 :dp_organizations.Homepage xsd:string))
HasKey(:organizations (:op_organizations.OrgID) ())
Declaration(Class(:papers))
Declaration(DataProperty(:dp_papers.PaperID))
DataPropertyRange(:dp_papers.PaperID xsd:integer)
Declaration(Class(:papers.PaperID))
Declaration(ObjectProperty(:op_papers.PaperID))
ObjectPropertyDomain(:op_papers.PaperID :papers)
ObjectPropertyRange(:op_papers.PaperID :papers.PaperID)
DataPropertyDomain(:dp_papers.PaperID :papers.PaperID)
HasKey(:papers.PaperID () (:dp_papers.PaperID))
SubClassOf(:papers.PaperID DataAllValuesFrom(:dp_papers.PaperID xsd:integer))
SubClassOf(:papers.PaperID DataExactCardinality(1 :dp_papers.PaperID xsd:integer))
SubClassOf(:papers ObjectAllValuesFrom(:op_papers.PaperID :papers.PaperID))
SubClassOf(:papers ObjectExactCardinality(1 :op_papers.PaperID :papers.PaperID))
Declaration(DataProperty(:dp_papers.Title))
DataPropertyRange(:dp_papers.Title xsd:string)
DataPropertyDomain(:dp_papers.Title :papers)
SubClassOf(:papers DataAllValuesFrom(:dp_papers.Title xsd:string))
SubClassOf(:papers DataMaxCardinality(1 :dp_papers.Title xsd:string))
Declaration(DataProperty(:dp_papers.Abstract))
DataPropertyRange(:dp_papers.Abstract xsd:string)
DataPropertyDomain(:dp_papers.Abstract :papers)
SubClassOf(:papers DataAllValuesFrom(:dp_papers.Abstract xsd:string))
SubClassOf(:papers DataMaxCardinality(1 :dp_papers.Abstract xsd:string))
Declaration(DataProperty(:dp_papers.URI))
DataPropertyRange(:dp_papers.URI xsd:string)
DataPropertyDomain(:dp_papers.URI :papers)
SubClassOf(:papers DataAllValuesFrom(:dp_papers.URI xsd:string))
SubClassOf(:papers DataMaxCardinality(1 :dp_papers.URI xsd:string))
Declaration(DataProperty(:dp_papers.Year))
DataPropertyRange(:dp_papers.Year xsd:integer)
DataPropertyDomain(:dp_papers.Year :papers)
SubClassOf(:papers DataAllValuesFrom(:dp_papers.Year xsd:integer))
SubClassOf(:papers DataMaxCardinality(1 :dp_papers.Year xsd:integer))
Declaration(DataProperty(:dp_papers.Conference))
DataPropertyRange(:dp_papers.Conference xsd:integer)
Declaration(Class(:papers.Conference))
Declaration(ObjectProperty(:op_papers.Conference))
ObjectPropertyDomain(:op_papers.Conference :papers)
ObjectPropertyRange(:op_papers.Conference :papers.Conference)
DataPropertyDomain(:dp_papers.Conference :papers.Conference)
HasKey(:papers.Conference () (:dp_papers.Conference))
SubClassOf(:papers.Conference DataAllValuesFrom(:dp_papers.Conference xsd:integer))
SubClassOf(:papers.Conference DataExactCardinality(1 :dp_papers.Conference xsd:integer))
SubClassOf(:papers ObjectAllValuesFrom(:op_papers.Conference :papers.Conference))
SubClassOf(:papers ObjectMaxCardinality(1 :op_papers.Conference :papers.Conference))
SubClassOf(:papers.Conference :conferences.ConfID)
SubDataPropertyOf(:dp_papers.Conference :dp_conferences.ConfID)
Declaration(DataProperty(:dp_papers.Publish))
DataPropertyRange(:dp_papers.Publish xsd:integer)
DataPropertyDomain(:dp_papers.Publish :papers)
SubClassOf(:papers DataAllValuesFrom(:dp_papers.Publish xsd:integer))
SubClassOf(:papers DataMaxCardinality(1 :dp_papers.Publish xsd:integer))
HasKey(:papers (:op_papers.PaperID) ())
Declaration(Class(:persons))
Declaration(DataProperty(:dp_persons.PerID))
DataPropertyRange(:dp_persons.PerID xsd:integer)
Declaration(Class(:persons.PerID))
Declaration(ObjectProperty(:op_persons.PerID))
ObjectPropertyDomain(:op_persons.PerID :persons)
ObjectPropertyRange(:op_persons.PerID :persons.PerID)
DataPropertyDomain(:dp_persons.PerID :persons.PerID)
HasKey(:persons.PerID () (:dp_persons.PerID))
SubClassOf(:persons.PerID DataAllValuesFrom(:dp_persons.PerID xsd:integer))
SubClassOf(:persons.PerID DataExactCardinality(1 :dp_persons.PerID xsd:integer))
SubClassOf(:persons ObjectAllValuesFrom(:op_persons.PerID :persons.PerID))
SubClassOf(:persons ObjectExactCardinality(1 :op_persons.PerID :persons.PerID))
Declaration(DataProperty(:dp_persons.Type))
DataPropertyRange(:dp_persons.Type xsd:string)
DataPropertyDomain(:dp_persons.Type :persons)
SubClassOf(:persons DataAllValuesFrom(:dp_persons.Type xsd:string))
SubClassOf(:persons DataMaxCardinality(1 :dp_persons.Type xsd:string))
Declaration(DataProperty(:dp_persons.FirstName))
DataPropertyRange(:dp_persons.FirstName xsd:string)
DataPropertyDomain(:dp_persons.FirstName :persons)
SubClassOf(:persons DataAllValuesFrom(:dp_persons.FirstName xsd:string))
SubClassOf(:persons DataMaxCardinality(1 :dp_persons.FirstName xsd:string))
Declaration(DataProperty(:dp_persons.LastName))
DataPropertyRange(:dp_persons.LastName xsd:string)
DataPropertyDomain(:dp_persons.LastName :persons)
SubClassOf(:persons DataAllValuesFrom(:dp_persons.LastName xsd:string))
SubClassOf(:persons DataMaxCardinality(1 :dp_persons.LastName xsd:string))
Declaration(DataProperty(:dp_persons.Address))
DataPropertyRange(:dp_persons.Address xsd:string)
DataPropertyDomain(:dp_persons.Address :persons)
SubClassOf(:persons DataAllValuesFrom(:dp_persons.Address xsd:string))
SubClassOf(:persons DataMaxCardinality(1 :dp_persons.Address xsd:string))
Declaration(DataProperty(:dp_persons.Email))
DataPropertyRange(:dp_persons.Email xsd:string)
DataPropertyDomain(:dp_persons.Email :persons)
SubClassOf(:persons DataAllValuesFrom(:dp_persons.Email xsd:string))
SubClassOf(:persons DataMaxCardinality(1 :dp_persons.Email xsd:string))
Declaration(DataProperty(:dp_persons.Homepage))
DataPropertyRange(:dp_persons.Homepage xsd:string)
DataPropertyDomain(:dp_persons.Homepage :persons)
SubClassOf(:persons DataAllValuesFrom(:dp_persons.Homepage xsd:string))
SubClassOf(:persons DataMaxCardinality(1 :dp_persons.Homepage xsd:string))
Declaration(DataProperty(:dp_persons.Phone))
DataPropertyRange(:dp_persons.Phone xsd:string)
DataPropertyDomain(:dp_persons.Phone :persons)
SubClassOf(:persons DataAllValuesFrom(:dp_persons.Phone xsd:string))
SubClassOf(:persons DataMaxCardinality(1 :dp_persons.Phone xsd:string))
Declaration(DataProperty(:dp_persons.URI))
DataPropertyRange(:dp_persons.URI xsd:string)
DataPropertyDomain(:dp_persons.URI :persons)
SubClassOf(:persons DataAllValuesFrom(:dp_persons.URI xsd:string))
SubClassOf(:persons DataMaxCardinality(1 :dp_persons.URI xsd:string))
Declaration(DataProperty(:dp_persons.Photo))
DataPropertyRange(:dp_persons.Photo xsd:string)
DataPropertyDomain(:dp_persons.Photo :persons)
SubClassOf(:persons DataAllValuesFrom(:dp_persons.Photo xsd:string))
SubClassOf(:persons DataMaxCardinality(1 :dp_persons.Photo xsd:string))
HasKey(:persons (:op_persons.PerID) ())
Declaration(Class(:rel_paper_topic))
Declaration(DataProperty(:dp_rel_paper_topic.PaperID))
DataPropertyRange(:dp_rel_paper_topic.PaperID xsd:integer)
Declaration(Class(:rel_paper_topic.PaperID))
Declaration(ObjectProperty(:op_rel_paper_topic.PaperID))
ObjectPropertyDomain(:op_rel_paper_topic.PaperID :rel_paper_topic)
ObjectPropertyRange(:op_rel_paper_topic.PaperID :rel_paper_topic.PaperID)
DataPropertyDomain(:dp_rel_paper_topic.PaperID :rel_paper_topic.PaperID)
HasKey(:rel_paper_topic.PaperID () (:dp_rel_paper_topic.PaperID))
SubClassOf(:rel_paper_topic.PaperID DataAllValuesFrom(:dp_rel_paper_topic.PaperID xsd:integer))
SubClassOf(:rel_paper_topic.PaperID DataExactCardinality(1 :dp_rel_paper_topic.PaperID xsd:integer))
SubClassOf(:rel_paper_topic ObjectAllValuesFrom(:op_rel_paper_topic.PaperID :rel_paper_topic.PaperID))
SubClassOf(:rel_paper_topic ObjectExactCardinality(1 :op_rel_paper_topic.PaperID :rel_paper_topic.PaperID))
SubClassOf(:rel_paper_topic.PaperID :papers.PaperID)
SubDataPropertyOf(:dp_rel_paper_topic.PaperID :dp_papers.PaperID)
Declaration(DataProperty(:dp_rel_paper_topic.TopicID))
DataPropertyRange(:dp_rel_paper_topic.TopicID xsd:integer)
Declaration(Class(:rel_paper_topic.TopicID))
Declaration(ObjectProperty(:op_rel_paper_topic.TopicID))
ObjectPropertyDomain(:op_rel_paper_topic.TopicID :rel_paper_topic)
ObjectPropertyRange(:op_rel_paper_topic.TopicID :rel_paper_topic.TopicID)
DataPropertyDomain(:dp_rel_paper_topic.TopicID :rel_paper_topic.TopicID)
HasKey(:rel_paper_topic.TopicID () (:dp_rel_paper_topic.TopicID))
SubClassOf(:rel_paper_topic.TopicID DataAllValuesFrom(:dp_rel_paper_topic.TopicID xsd:integer))
SubClassOf(:rel_paper_topic.TopicID DataExactCardinality(1 :dp_rel_paper_topic.TopicID xsd:integer))
SubClassOf(:rel_paper_topic ObjectAllValuesFrom(:op_rel_paper_topic.TopicID :rel_paper_topic.TopicID))
SubClassOf(:rel_paper_topic ObjectExactCardinality(1 :op_rel_paper_topic.TopicID :rel_paper_topic.TopicID))
SubClassOf(:rel_paper_topic.TopicID :topics.TopicID)
SubDataPropertyOf(:dp_rel_paper_topic.TopicID :dp_topics.TopicID)
Declaration(DataProperty(:dp_rel_paper_topic.RelationType))
DataPropertyRange(:dp_rel_paper_topic.RelationType xsd:integer)
DataPropertyDomain(:dp_rel_paper_topic.RelationType :rel_paper_topic)
SubClassOf(:rel_paper_topic DataAllValuesFrom(:dp_rel_paper_topic.RelationType xsd:integer))
SubClassOf(:rel_paper_topic DataMaxCardinality(1 :dp_rel_paper_topic.RelationType xsd:integer))
HasKey(:rel_paper_topic (:op_rel_paper_topic.PaperID :op_rel_paper_topic.TopicID) ())
Declaration(Class(:rel_person_organization))
Declaration(DataProperty(:dp_rel_person_organization.PersonID))
DataPropertyRange(:dp_rel_person_organization.PersonID xsd:integer)
Declaration(Class(:rel_person_organization.PersonID))
Declaration(ObjectProperty(:op_rel_person_organization.PersonID))
ObjectPropertyDomain(:op_rel_person_organization.PersonID :rel_person_organization)
ObjectPropertyRange(:op_rel_person_organization.PersonID :rel_person_organization.PersonID)
DataPropertyDomain(:dp_rel_person_organization.PersonID :rel_person_organization.PersonID)
HasKey(:rel_person_organization.PersonID () (:dp_rel_person_organization.PersonID))
SubClassOf(:rel_person_organization.PersonID DataAllValuesFrom(:dp_rel_person_organization.PersonID xsd:integer))
SubClassOf(:rel_person_organization.PersonID DataExactCardinality(1 :dp_rel_person_organization.PersonID xsd:integer))
SubClassOf(:rel_person_organization ObjectAllValuesFrom(:op_rel_person_organization.PersonID :rel_person_organization.PersonID))
SubClassOf(:rel_person_organization ObjectExactCardinality(1 :op_rel_person_organization.PersonID :rel_person_organization.PersonID))
SubClassOf(:rel_person_organization.PersonID :persons.PerID)
SubDataPropertyOf(:dp_rel_person_organization.PersonID :dp_persons.PerID)
Declaration(DataProperty(:dp_rel_person_organization.OrganizationID))
DataPropertyRange(:dp_rel_person_organization.OrganizationID xsd:integer)
Declaration(Class(:rel_person_organization.OrganizationID))
Declaration(ObjectProperty(:op_rel_person_organization.OrganizationID))
ObjectPropertyDomain(:op_rel_person_organization.OrganizationID :rel_person_organization)
ObjectPropertyRange(:op_rel_person_organization.OrganizationID :rel_person_organization.OrganizationID)
DataPropertyDomain(:dp_rel_person_organization.OrganizationID :rel_person_organization.OrganizationID)
HasKey(:rel_person_organization.OrganizationID () (:dp_rel_person_organization.OrganizationID))
SubClassOf(:rel_person_organization.OrganizationID DataAllValuesFrom(:dp_rel_person_organization.OrganizationID xsd:integer))
SubClassOf(:rel_person_organization.OrganizationID DataExactCardinality(1 :dp_rel_person_organization.OrganizationID xsd:integer))
SubClassOf(:rel_person_organization ObjectAllValuesFrom(:op_rel_person_organization.OrganizationID :rel_person_organization.OrganizationID))
SubClassOf(:rel_person_organization ObjectExactCardinality(1 :op_rel_person_organization.OrganizationID :rel_person_organization.OrganizationID))
SubClassOf(:rel_person_organization.OrganizationID :organizations.OrgID)
SubDataPropertyOf(:dp_rel_person_organization.OrganizationID :dp_organizations.OrgID)
HasKey(:rel_person_organization (:op_rel_person_organization.PersonID :op_rel_person_organization.OrganizationID) ())
Declaration(Class(:rel_person_paper))
Declaration(DataProperty(:dp_rel_person_paper.PersonID))
DataPropertyRange(:dp_rel_person_paper.PersonID xsd:integer)
Declaration(Class(:rel_person_paper.PersonID))
Declaration(ObjectProperty(:op_rel_person_paper.PersonID))
ObjectPropertyDomain(:op_rel_person_paper.PersonID :rel_person_paper)
ObjectPropertyRange(:op_rel_person_paper.PersonID :rel_person_paper.PersonID)
DataPropertyDomain(:dp_rel_person_paper.PersonID :rel_person_paper.PersonID)
HasKey(:rel_person_paper.PersonID () (:dp_rel_person_paper.PersonID))
SubClassOf(:rel_person_paper.PersonID DataAllValuesFrom(:dp_rel_person_paper.PersonID xsd:integer))
SubClassOf(:rel_person_paper.PersonID DataExactCardinality(1 :dp_rel_person_paper.PersonID xsd:integer))
SubClassOf(:rel_person_paper ObjectAllValuesFrom(:op_rel_person_paper.PersonID :rel_person_paper.PersonID))
SubClassOf(:rel_person_paper ObjectExactCardinality(1 :op_rel_person_paper.PersonID :rel_person_paper.PersonID))
SubClassOf(:rel_person_paper.PersonID :persons.PerID)
SubDataPropertyOf(:dp_rel_person_paper.PersonID :dp_persons.PerID)
Declaration(DataProperty(:dp_rel_person_paper.PaperID))
DataPropertyRange(:dp_rel_person_paper.PaperID xsd:integer)
Declaration(Class(:rel_person_paper.PaperID))
Declaration(ObjectProperty(:op_rel_person_paper.PaperID))
ObjectPropertyDomain(:op_rel_person_paper.PaperID :rel_person_paper)
ObjectPropertyRange(:op_rel_person_paper.PaperID :rel_person_paper.PaperID)
DataPropertyDomain(:dp_rel_person_paper.PaperID :rel_person_paper.PaperID)
HasKey(:rel_person_paper.PaperID () (:dp_rel_person_paper.PaperID))
SubClassOf(:rel_person_paper.PaperID DataAllValuesFrom(:dp_rel_person_paper.PaperID xsd:integer))
SubClassOf(:rel_person_paper.PaperID DataExactCardinality(1 :dp_rel_person_paper.PaperID xsd:integer))
SubClassOf(:rel_person_paper ObjectAllValuesFrom(:op_rel_person_paper.PaperID :rel_person_paper.PaperID))
SubClassOf(:rel_person_paper ObjectExactCardinality(1 :op_rel_person_paper.PaperID :rel_person_paper.PaperID))
SubClassOf(:rel_person_paper.PaperID :papers.PaperID)
SubDataPropertyOf(:dp_rel_person_paper.PaperID :dp_papers.PaperID)
HasKey(:rel_person_paper (:op_rel_person_paper.PersonID :op_rel_person_paper.PaperID) ())
Declaration(Class(:rel_person_topic))
Declaration(DataProperty(:dp_rel_person_topic.PersonID))
DataPropertyRange(:dp_rel_person_topic.PersonID xsd:integer)
Declaration(Class(:rel_person_topic.PersonID))
Declaration(ObjectProperty(:op_rel_person_topic.PersonID))
ObjectPropertyDomain(:op_rel_person_topic.PersonID :rel_person_topic)
ObjectPropertyRange(:op_rel_person_topic.PersonID :rel_person_topic.PersonID)
DataPropertyDomain(:dp_rel_person_topic.PersonID :rel_person_topic.PersonID)
HasKey(:rel_person_topic.PersonID () (:dp_rel_person_topic.PersonID))
SubClassOf(:rel_person_topic.PersonID DataAllValuesFrom(:dp_rel_person_topic.PersonID xsd:integer))
SubClassOf(:rel_person_topic.PersonID DataExactCardinality(1 :dp_rel_person_topic.PersonID xsd:integer))
SubClassOf(:rel_person_topic ObjectAllValuesFrom(:op_rel_person_topic.PersonID :rel_person_topic.PersonID))
SubClassOf(:rel_person_topic ObjectExactCardinality(1 :op_rel_person_topic.PersonID :rel_person_topic.PersonID))
SubClassOf(:rel_person_topic.PersonID :persons.PerID)
SubDataPropertyOf(:dp_rel_person_topic.PersonID :dp_persons.PerID)
Declaration(DataProperty(:dp_rel_person_topic.TopicID))
DataPropertyRange(:dp_rel_person_topic.TopicID xsd:integer)
Declaration(Class(:rel_person_topic.TopicID))
Declaration(ObjectProperty(:op_rel_person_topic.TopicID))
ObjectPropertyDomain(:op_rel_person_topic.TopicID :rel_person_topic)
ObjectPropertyRange(:op_rel_person_topic.TopicID :rel_person_topic.TopicID)
DataPropertyDomain(:dp_rel_person_topic.TopicID :rel_person_topic.TopicID)
HasKey(:rel_person_topic.TopicID () (:dp_rel_person_topic.TopicID))
SubClassOf(:rel_person_topic.TopicID DataAllValuesFrom(:dp_rel_person_topic.TopicID xsd:integer))
SubClassOf(:rel_person_topic.TopicID DataExactCardinality(1 :dp_rel_person_topic.TopicID xsd:integer))
SubClassOf(:rel_person_topic ObjectAllValuesFrom(:op_rel_person_topic.TopicID :rel_person_topic.TopicID))
SubClassOf(:rel_person_topic ObjectExactCardinality(1 :op_rel_person_topic.TopicID :rel_person_topic.TopicID))
SubClassOf(:rel_person_topic.TopicID :topics.TopicID)
SubDataPropertyOf(:dp_rel_person_topic.TopicID :dp_topics.TopicID)
HasKey(:rel_person_topic (:op_rel_person_topic.PersonID :op_rel_person_topic.TopicID) ())
Declaration(Class(:topics))
Declaration(DataProperty(:dp_topics.TopicID))
DataPropertyRange(:dp_topics.TopicID xsd:integer)
Declaration(Class(:topics.TopicID))
Declaration(ObjectProperty(:op_topics.TopicID))
ObjectPropertyDomain(:op_topics.TopicID :topics)
ObjectPropertyRange(:op_topics.TopicID :topics.TopicID)
DataPropertyDomain(:dp_topics.TopicID :topics.TopicID)
HasKey(:topics.TopicID () (:dp_topics.TopicID))
SubClassOf(:topics.TopicID DataAllValuesFrom(:dp_topics.TopicID xsd:integer))
SubClassOf(:topics.TopicID DataExactCardinality(1 :dp_topics.TopicID xsd:integer))
SubClassOf(:topics ObjectAllValuesFrom(:op_topics.TopicID :topics.TopicID))
SubClassOf(:topics ObjectExactCardinality(1 :op_topics.TopicID :topics.TopicID))
Declaration(DataProperty(:dp_topics.TopicName))
DataPropertyRange(:dp_topics.TopicName xsd:string)
DataPropertyDomain(:dp_topics.TopicName :topics)
SubClassOf(:topics DataAllValuesFrom(:dp_topics.TopicName xsd:string))
SubClassOf(:topics DataMaxCardinality(1 :dp_topics.TopicName xsd:string))
Declaration(DataProperty(:dp_topics.URI))
DataPropertyRange(:dp_topics.URI xsd:string)
DataPropertyDomain(:dp_topics.URI :topics)
SubClassOf(:topics DataAllValuesFrom(:dp_topics.URI xsd:string))
SubClassOf(:topics DataMaxCardinality(1 :dp_topics.URI xsd:string))
Declaration(DataProperty(:dp_topics.ParentID))
DataPropertyRange(:dp_topics.ParentID xsd:integer)
Declaration(Class(:topics.ParentID))
Declaration(ObjectProperty(:op_topics.ParentID))
ObjectPropertyDomain(:op_topics.ParentID :topics)
ObjectPropertyRange(:op_topics.ParentID :topics.ParentID)
DataPropertyDomain(:dp_topics.ParentID :topics.ParentID)
HasKey(:topics.ParentID () (:dp_topics.ParentID))
SubClassOf(:topics.ParentID DataAllValuesFrom(:dp_topics.ParentID xsd:integer))
SubClassOf(:topics.ParentID DataExactCardinality(1 :dp_topics.ParentID xsd:integer))
SubClassOf(:topics ObjectAllValuesFrom(:op_topics.ParentID :topics.ParentID))
SubClassOf(:topics ObjectMaxCardinality(1 :op_topics.ParentID :topics.ParentID))
SubClassOf(:topics.ParentID :topics.TopicID)
SubDataPropertyOf(:dp_topics.ParentID :dp_topics.TopicID)
HasKey(:topics (:op_topics.TopicID) ())
DisjointClasses(:conferences :conferences.ConfID :organizations :organizations.OrgID :papers :papers.PaperID :persons :persons.PerID :rel_paper_topic :rel_person_organization :rel_person_paper :rel_person_topic :topics :topics.TopicID)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=conferences&k=ConfID&v=23541>))
ClassAssertion(:conferences <http://foo.example/iswc/#t=conferences&k=ConfID&v=23541>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>))
ClassAssertion(:conferences.ConfID <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_conferences.ConfID <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541> "23541"^^xsd:integer)
ObjectPropertyAssertion(:op_conferences.ConfID <http://foo.example/iswc/#t=conferences&k=ConfID&v=23541> <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_conferences.Name <http://foo.example/iswc/#t=conferences&k=ConfID&v=23541> "International Semantic Web Conference 2002"^^xsd:string)
DataPropertyAssertion(:dp_conferences.URI <http://foo.example/iswc/#t=conferences&k=ConfID&v=23541> "http://annotation.semanticweb.org/iswc/iswc.daml#ISWC_2002"^^xsd:string)
DataPropertyAssertion(:dp_conferences.Date <http://foo.example/iswc/#t=conferences&k=ConfID&v=23541> "June 9-12, 2002"^^xsd:string)
DataPropertyAssertion(:dp_conferences.Location <http://foo.example/iswc/#t=conferences&k=ConfID&v=23541> "Sardinia"^^xsd:string)
DataPropertyAssertion(:dp_conferences.Datum <http://foo.example/iswc/#t=conferences&k=ConfID&v=23541> "2002-10-09 00:00:00.0"^^xsd:dateTime)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=conferences&k=ConfID&v=23542>))
ClassAssertion(:conferences <http://foo.example/iswc/#t=conferences&k=ConfID&v=23542>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=conferences&c=ConfID&v=23542>))
ClassAssertion(:conferences.ConfID <http://foo.example/iswc/#t=conferences&c=ConfID&v=23542>)
DataPropertyAssertion(:dp_conferences.ConfID <http://foo.example/iswc/#t=conferences&c=ConfID&v=23542> "23542"^^xsd:integer)
ObjectPropertyAssertion(:op_conferences.ConfID <http://foo.example/iswc/#t=conferences&k=ConfID&v=23542> <http://foo.example/iswc/#t=conferences&c=ConfID&v=23542>)
DataPropertyAssertion(:dp_conferences.Name <http://foo.example/iswc/#t=conferences&k=ConfID&v=23542> "15th International World Wide Web Conference"^^xsd:string)
DataPropertyAssertion(:dp_conferences.Date <http://foo.example/iswc/#t=conferences&k=ConfID&v=23542> "May 23-26, 2006"^^xsd:string)
DataPropertyAssertion(:dp_conferences.Location <http://foo.example/iswc/#t=conferences&k=ConfID&v=23542> "Edinburgh"^^xsd:string)
DataPropertyAssertion(:dp_conferences.Datum <http://foo.example/iswc/#t=conferences&k=ConfID&v=23542> "2006-05-23 00:00:00.0"^^xsd:dateTime)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&k=OrgID&v=1>))
ClassAssertion(:organizations <http://foo.example/iswc/#t=organizations&k=OrgID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&c=OrgID&v=1>))
ClassAssertion(:organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=1>)
DataPropertyAssertion(:dp_organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_organizations.OrgID <http://foo.example/iswc/#t=organizations&k=OrgID&v=1> <http://foo.example/iswc/#t=organizations&c=OrgID&v=1>)
DataPropertyAssertion(:dp_organizations.Name <http://foo.example/iswc/#t=organizations&k=OrgID&v=1> "USC Information Sciences Institute"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Address <http://foo.example/iswc/#t=organizations&k=OrgID&v=1> "4676 Admirality Way"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Location <http://foo.example/iswc/#t=organizations&k=OrgID&v=1> "Marina Del Rey"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Country <http://foo.example/iswc/#t=organizations&k=OrgID&v=1> "United States"^^xsd:string)
DataPropertyAssertion(:dp_organizations.URI <http://foo.example/iswc/#t=organizations&k=OrgID&v=1> "http://trellis.semanticweb.org/expect/web/semanticweb/iswc02_trellis.pdf#ISI"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&k=OrgID&v=2>))
ClassAssertion(:organizations <http://foo.example/iswc/#t=organizations&k=OrgID&v=2>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&c=OrgID&v=2>))
ClassAssertion(:organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=2>)
DataPropertyAssertion(:dp_organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_organizations.OrgID <http://foo.example/iswc/#t=organizations&k=OrgID&v=2> <http://foo.example/iswc/#t=organizations&c=OrgID&v=2>)
DataPropertyAssertion(:dp_organizations.Type <http://foo.example/iswc/#t=organizations&k=OrgID&v=2> "U"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Name <http://foo.example/iswc/#t=organizations&k=OrgID&v=2> "University of Karlsruhe"^^xsd:string)
DataPropertyAssertion(:dp_organizations.URI <http://foo.example/iswc/#t=organizations&k=OrgID&v=2> "http://annotation.semanticweb.org/iswc/iswc.daml#University_of_Karlsruhe"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&k=OrgID&v=3>))
ClassAssertion(:organizations <http://foo.example/iswc/#t=organizations&k=OrgID&v=3>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&c=OrgID&v=3>))
ClassAssertion(:organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=3>)
DataPropertyAssertion(:dp_organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_organizations.OrgID <http://foo.example/iswc/#t=organizations&k=OrgID&v=3> <http://foo.example/iswc/#t=organizations&c=OrgID&v=3>)
DataPropertyAssertion(:dp_organizations.Type <http://foo.example/iswc/#t=organizations&k=OrgID&v=3> "U"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Name <http://foo.example/iswc/#t=organizations&k=OrgID&v=3> "International University in Germany"^^xsd:string)
DataPropertyAssertion(:dp_organizations.URI <http://foo.example/iswc/#t=organizations&k=OrgID&v=3> "http://www.i-u.de/schools/eberhart/iswc2002/#International University in Germany"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&k=OrgID&v=4>))
ClassAssertion(:organizations <http://foo.example/iswc/#t=organizations&k=OrgID&v=4>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&c=OrgID&v=4>))
ClassAssertion(:organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=4>)
DataPropertyAssertion(:dp_organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_organizations.OrgID <http://foo.example/iswc/#t=organizations&k=OrgID&v=4> <http://foo.example/iswc/#t=organizations&c=OrgID&v=4>)
DataPropertyAssertion(:dp_organizations.Type <http://foo.example/iswc/#t=organizations&k=OrgID&v=4> "I"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Name <http://foo.example/iswc/#t=organizations&k=OrgID&v=4> "AIFB"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Location <http://foo.example/iswc/#t=organizations&k=OrgID&v=4> "Karlsruhe"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Country <http://foo.example/iswc/#t=organizations&k=OrgID&v=4> "Germany"^^xsd:string)
DataPropertyAssertion(:dp_organizations.URI <http://foo.example/iswc/#t=organizations&k=OrgID&v=4> "http://annotation.semanticweb.org/iswc/iswc.daml#AIFB"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Homepage <http://foo.example/iswc/#t=organizations&k=OrgID&v=4> "http://www.aifb.uni-karlsruhe.de/"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&k=OrgID&v=5>))
ClassAssertion(:organizations <http://foo.example/iswc/#t=organizations&k=OrgID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&c=OrgID&v=5>))
ClassAssertion(:organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=5>)
DataPropertyAssertion(:dp_organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_organizations.OrgID <http://foo.example/iswc/#t=organizations&k=OrgID&v=5> <http://foo.example/iswc/#t=organizations&c=OrgID&v=5>)
DataPropertyAssertion(:dp_organizations.Type <http://foo.example/iswc/#t=organizations&k=OrgID&v=5> "D"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Name <http://foo.example/iswc/#t=organizations&k=OrgID&v=5> "Department of Computer Science"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Address <http://foo.example/iswc/#t=organizations&k=OrgID&v=5> "De Boelelaan 1081a"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Location <http://foo.example/iswc/#t=organizations&k=OrgID&v=5> "Amsterdam"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Postcode <http://foo.example/iswc/#t=organizations&k=OrgID&v=5> "1081 HV"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Country <http://foo.example/iswc/#t=organizations&k=OrgID&v=5> "The Netherlands"^^xsd:string)
DataPropertyAssertion(:dp_organizations.URI <http://foo.example/iswc/#t=organizations&k=OrgID&v=5> "http://www.cs.vu.nl/~borys/papers/abstracts/ISWC2002.html#CSVUNL"^^xsd:string)
ClassAssertion(:organizations.Belongsto <http://foo.example/iswc/#t=organizations&c=OrgID&v=6>)
DataPropertyAssertion(:dp_organizations.Belongsto <http://foo.example/iswc/#t=organizations&c=OrgID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_organizations.Belongsto <http://foo.example/iswc/#t=organizations&k=OrgID&v=5> <http://foo.example/iswc/#t=organizations&c=OrgID&v=6>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&k=OrgID&v=6>))
ClassAssertion(:organizations <http://foo.example/iswc/#t=organizations&k=OrgID&v=6>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&c=OrgID&v=6>))
ClassAssertion(:organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=6>)
DataPropertyAssertion(:dp_organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_organizations.OrgID <http://foo.example/iswc/#t=organizations&k=OrgID&v=6> <http://foo.example/iswc/#t=organizations&c=OrgID&v=6>)
DataPropertyAssertion(:dp_organizations.Type <http://foo.example/iswc/#t=organizations&k=OrgID&v=6> "U"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Name <http://foo.example/iswc/#t=organizations&k=OrgID&v=6> "Vrije Universiteit Amsterdam"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Address <http://foo.example/iswc/#t=organizations&k=OrgID&v=6> "De Boelelaan 1105"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Location <http://foo.example/iswc/#t=organizations&k=OrgID&v=6> "Amsterdam"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Postcode <http://foo.example/iswc/#t=organizations&k=OrgID&v=6> "1081 HV"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Country <http://foo.example/iswc/#t=organizations&k=OrgID&v=6> "The Netherlands"^^xsd:string)
DataPropertyAssertion(:dp_organizations.URI <http://foo.example/iswc/#t=organizations&k=OrgID&v=6> "http://www.cs.vu.nl/~borys/papers/abstracts/ISWC2002.html#VrijeUniversiteitAmsterdam"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&k=OrgID&v=7>))
ClassAssertion(:organizations <http://foo.example/iswc/#t=organizations&k=OrgID&v=7>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&c=OrgID&v=7>))
ClassAssertion(:organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=7>)
DataPropertyAssertion(:dp_organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=7> "7"^^xsd:integer)
ObjectPropertyAssertion(:op_organizations.OrgID <http://foo.example/iswc/#t=organizations&k=OrgID&v=7> <http://foo.example/iswc/#t=organizations&c=OrgID&v=7>)
DataPropertyAssertion(:dp_organizations.Name <http://foo.example/iswc/#t=organizations&k=OrgID&v=7> "Hewlett-Packard Laboratories, Bristol"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Address <http://foo.example/iswc/#t=organizations&k=OrgID&v=7> "Filton Road"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Location <http://foo.example/iswc/#t=organizations&k=OrgID&v=7> "Bristol"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Postcode <http://foo.example/iswc/#t=organizations&k=OrgID&v=7> "BS34 8QZ"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Country <http://foo.example/iswc/#t=organizations&k=OrgID&v=7> "UK"^^xsd:string)
DataPropertyAssertion(:dp_organizations.URI <http://foo.example/iswc/#t=organizations&k=OrgID&v=7> "http://www.hpl.hp.co.uk#HPL"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Homepage <http://foo.example/iswc/#t=organizations&k=OrgID&v=7> "http://www.hpl.hp.com/"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&k=OrgID&v=8>))
ClassAssertion(:organizations <http://foo.example/iswc/#t=organizations&k=OrgID&v=8>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&c=OrgID&v=8>))
ClassAssertion(:organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=8>)
DataPropertyAssertion(:dp_organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=8> "8"^^xsd:integer)
ObjectPropertyAssertion(:op_organizations.OrgID <http://foo.example/iswc/#t=organizations&k=OrgID&v=8> <http://foo.example/iswc/#t=organizations&c=OrgID&v=8>)
DataPropertyAssertion(:dp_organizations.Type <http://foo.example/iswc/#t=organizations&k=OrgID&v=8> "I"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Name <http://foo.example/iswc/#t=organizations&k=OrgID&v=8> "Institute for the Protection and Security of the Citizen"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Address <http://foo.example/iswc/#t=organizations&k=OrgID&v=8> "Via Enrico Fermi, 1
21020 - Ispra (Italy)"^^xsd:string)
DataPropertyAssertion(:dp_organizations.URI <http://foo.example/iswc/#t=organizations&k=OrgID&v=8> "http://dma.jrc.it#Institute for the Protection and Security of the Citizen"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&k=OrgID&v=9>))
ClassAssertion(:organizations <http://foo.example/iswc/#t=organizations&k=OrgID&v=9>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=organizations&c=OrgID&v=9>))
ClassAssertion(:organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=9>)
DataPropertyAssertion(:dp_organizations.OrgID <http://foo.example/iswc/#t=organizations&c=OrgID&v=9> "9"^^xsd:integer)
ObjectPropertyAssertion(:op_organizations.OrgID <http://foo.example/iswc/#t=organizations&k=OrgID&v=9> <http://foo.example/iswc/#t=organizations&c=OrgID&v=9>)
DataPropertyAssertion(:dp_organizations.Type <http://foo.example/iswc/#t=organizations&k=OrgID&v=9> "D"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Name <http://foo.example/iswc/#t=organizations&k=OrgID&v=9> "Dipartimento di Ingegneria dell'Informazione"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Address <http://foo.example/iswc/#t=organizations&k=OrgID&v=9> "Via Vignolese 905"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Location <http://foo.example/iswc/#t=organizations&k=OrgID&v=9> "Modena"^^xsd:string)
DataPropertyAssertion(:dp_organizations.Country <http://foo.example/iswc/#t=organizations&k=OrgID&v=9> "Italy"^^xsd:string)
DataPropertyAssertion(:dp_organizations.URI <http://foo.example/iswc/#t=organizations&k=OrgID&v=9> "http://www.dbgroup.unimo.it/iswc/iswc.html#DII"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&k=PaperID&v=1>))
ClassAssertion(:papers <http://foo.example/iswc/#t=papers&k=PaperID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&c=PaperID&v=1>))
ClassAssertion(:papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=1>)
DataPropertyAssertion(:dp_papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.PaperID <http://foo.example/iswc/#t=papers&k=PaperID&v=1> <http://foo.example/iswc/#t=papers&c=PaperID&v=1>)
DataPropertyAssertion(:dp_papers.Title <http://foo.example/iswc/#t=papers&k=PaperID&v=1> "Trusting Information Sources One Citizen at a Time"^^xsd:string)
DataPropertyAssertion(:dp_papers.Abstract <http://foo.example/iswc/#t=papers&k=PaperID&v=1> "This paper describes an approach to derive assessments about information 
      sources based on individual feedback about the sources. We describe 
      TRELLIS, a system that helps users annotate their analysis of 
      alternative information sources that can be contradictory and 
      incomplete. As the user makes a decision on which sources to dismiss and 
      which to believe in making a final decision, TRELLIS captures the 
      derivation of the decision in a semantic markup. TRELLIS then uses these 
      annotations to derive an assessment of the source based on the 
      annotations of many individuals. Our work builds on the Semantic Web and 
      presents a tool that helps users create annotations that are in a mix of 
      formal and human language, and exploits the formal representations to 
      derive measures of trust in the content of Web resources and their 
      original source."^^xsd:string)
DataPropertyAssertion(:dp_papers.URI <http://foo.example/iswc/#t=papers&k=PaperID&v=1> "http://trellis.semanticweb.org/expect/web/semanticweb/iswc02_trellis.pdf#Trusting Information Sources One Citizen at a Time"^^xsd:string)
DataPropertyAssertion(:dp_papers.Year <http://foo.example/iswc/#t=papers&k=PaperID&v=1> "2002"^^xsd:integer)
ClassAssertion(:papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541> "23541"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.Conference <http://foo.example/iswc/#t=papers&k=PaperID&v=1> <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_papers.Publish <http://foo.example/iswc/#t=papers&k=PaperID&v=1> "1"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&k=PaperID&v=2>))
ClassAssertion(:papers <http://foo.example/iswc/#t=papers&k=PaperID&v=2>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&c=PaperID&v=2>))
ClassAssertion(:papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=2>)
DataPropertyAssertion(:dp_papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.PaperID <http://foo.example/iswc/#t=papers&k=PaperID&v=2> <http://foo.example/iswc/#t=papers&c=PaperID&v=2>)
DataPropertyAssertion(:dp_papers.Title <http://foo.example/iswc/#t=papers&k=PaperID&v=2> "Automatic Generation of Java/SQL based Inference Engines from RDF Schema and RuleML"^^xsd:string)
DataPropertyAssertion(:dp_papers.Abstract <http://foo.example/iswc/#t=papers&k=PaperID&v=2> "This paper describes two approaches for automatically converting RDF Schema 
and RuleML sources into an inference engine and storage repository. Rather than 
using traditional inference systems, our solution bases on mainstream 
technologies like Java and relational database systems. While this necessarily 
imposes some restrictions, the ease of integration into an existing IT landscape 
is a major advantage. We present the conversion tools and their limitations. 
Furthermore, an extension to RuleML is proposed, that allows Java-enabled 
reaction rules, where calls to Java libraries can be performed upon a rule 
firing. This requires hosts to be Java-enabled when rules and code are moved 
across the web. However, the solution allows for great engineering 
flexibility."^^xsd:string)
DataPropertyAssertion(:dp_papers.URI <http://foo.example/iswc/#t=papers&k=PaperID&v=2> "http://www.i-u.de/schools/eberhart/iswc2002/#Automatic Generation of Java/SQL based Inference Engines from RDF Schema and RuleML"^^xsd:string)
DataPropertyAssertion(:dp_papers.Year <http://foo.example/iswc/#t=papers&k=PaperID&v=2> "2002"^^xsd:integer)
ClassAssertion(:papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541> "23541"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.Conference <http://foo.example/iswc/#t=papers&k=PaperID&v=2> <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_papers.Publish <http://foo.example/iswc/#t=papers&k=PaperID&v=2> "1"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&k=PaperID&v=4>))
ClassAssertion(:papers <http://foo.example/iswc/#t=papers&k=PaperID&v=4>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&c=PaperID&v=4>))
ClassAssertion(:papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
DataPropertyAssertion(:dp_papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.PaperID <http://foo.example/iswc/#t=papers&k=PaperID&v=4> <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
DataPropertyAssertion(:dp_papers.Title <http://foo.example/iswc/#t=papers&k=PaperID&v=4> "Three Implementations of SquishQL, a Simple RDF Query Language"^^xsd:string)
DataPropertyAssertion(:dp_papers.Abstract <http://foo.example/iswc/#t=papers&k=PaperID&v=4> "RDF provides a basic way to represent data for the Semantic Web. We have 
      been experimenting with the query paradigm for working with RDF data in 
      semantic web applications. Query of RDF data provides a declarative 
      access mechanism that is suitable for application usage and remote 
      access. We describe work on a conceptual model for querying RDF data 
      that refines ideas first presented in at the W3C workshop on Query 
      Languages and the design of one possible syntax, derived from rdfDB, 
      that is suitable for application programmers. Further, we present 
      experience gained in three implementations of the query language."^^xsd:string)
DataPropertyAssertion(:dp_papers.URI <http://foo.example/iswc/#t=papers&k=PaperID&v=4> "http://www-uk.hpl.hp.com/people/afs/Abstracts/ISWC2002-SquishQL-Abstract.html#SquishQL"^^xsd:string)
DataPropertyAssertion(:dp_papers.Year <http://foo.example/iswc/#t=papers&k=PaperID&v=4> "2003"^^xsd:integer)
ClassAssertion(:papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541> "23541"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.Conference <http://foo.example/iswc/#t=papers&k=PaperID&v=4> <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_papers.Publish <http://foo.example/iswc/#t=papers&k=PaperID&v=4> "1"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&k=PaperID&v=5>))
ClassAssertion(:papers <http://foo.example/iswc/#t=papers&k=PaperID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&c=PaperID&v=5>))
ClassAssertion(:papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
DataPropertyAssertion(:dp_papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.PaperID <http://foo.example/iswc/#t=papers&k=PaperID&v=5> <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
DataPropertyAssertion(:dp_papers.Title <http://foo.example/iswc/#t=papers&k=PaperID&v=5> "A Data Integration Framework for E-commerce Product Classification"^^xsd:string)
DataPropertyAssertion(:dp_papers.Abstract <http://foo.example/iswc/#t=papers&k=PaperID&v=5> "A marketplace is 
      the place in which the demand and supply of buyers and vendors 
      participating in a business process may meet. Therefore, electronic 
      marketplaces are virtual communities in which buyers may meet proposals 
      of several suppliers and make the best choice. In the electronic 
      commerce world, the comparison between different products is blocked due 
      to the lack of standards (on the contrary, the proliferation of 
      standards) describing and classifying them. Therefore, the need for B2B 
      and B2C marketplaces is to reclassify products and goods according to 
      different standardization models. This paper aims to face this problem 
      by suggesting the use of a semi-automatic methodology, supported by a 
      tool (SI-Designer), to define the mapping among different e-commerce 
      product classification standards. This methodology was developed for the 
      MOMIS-system within the Intelligent Integration of Information research 
      area. We describe our extension to the methodology that makes it 
      applyable in general to product classification standard, by selecting a 
      fragment of ECCMA/UNSPSC and ecl@ss standard."^^xsd:string)
DataPropertyAssertion(:dp_papers.URI <http://foo.example/iswc/#t=papers&k=PaperID&v=5> "http://www.dbgroup.unimo.it/iswc/iswc.html#A Data Integration Framework for E-commerce Product Classification"^^xsd:string)
DataPropertyAssertion(:dp_papers.Year <http://foo.example/iswc/#t=papers&k=PaperID&v=5> "2002"^^xsd:integer)
ClassAssertion(:papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541> "23541"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.Conference <http://foo.example/iswc/#t=papers&k=PaperID&v=5> <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_papers.Publish <http://foo.example/iswc/#t=papers&k=PaperID&v=5> "1"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&k=PaperID&v=6>))
ClassAssertion(:papers <http://foo.example/iswc/#t=papers&k=PaperID&v=6>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&c=PaperID&v=6>))
ClassAssertion(:papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=6>)
DataPropertyAssertion(:dp_papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.PaperID <http://foo.example/iswc/#t=papers&k=PaperID&v=6> <http://foo.example/iswc/#t=papers&c=PaperID&v=6>)
DataPropertyAssertion(:dp_papers.Title <http://foo.example/iswc/#t=papers&k=PaperID&v=6> "Integrating Vocabularies: Discovering and Representing Vocabulary Maps"^^xsd:string)
DataPropertyAssertion(:dp_papers.Abstract <http://foo.example/iswc/#t=papers&k=PaperID&v=6> "The Semantic Web would enable new ways of doing business on the<br>Web 
      that require development of advanced business document<br>integration 
      technologies performing intelligent document<br>transformation. The 
      documents use different vocabularies that<br>consist of large 
      hierarchies of terms. Accordingly, vocabulary<br>mapping and 
      transformation becomes an important task in the whole<br>business 
      document transformation process. It includes several<br>subtasks: map 
      discovery, map representation, and map execution<br>that must be 
      seamlessly integrated into the document integration<br>process. In this 
      paper we discuss the process of discovering the<br>maps between two 
      vocabularies assuming availability of two sets of<br>documents, each 
      using one of the vocabularies. We take the<br>vocabularies of product 
      classification codes as a playground and<br>propose a reusable map 
      discovery technique based on Bayesian text<br>classification approach. 
      We show how the discovered maps can be<br>integrated into the document 
      transformation process."^^xsd:string)
DataPropertyAssertion(:dp_papers.URI <http://foo.example/iswc/#t=papers&k=PaperID&v=6> "http://www.cs.vu.nl/~borys/papers/abstracts/ISWC2002.html#OmelayenkoISWC2002"^^xsd:string)
DataPropertyAssertion(:dp_papers.Year <http://foo.example/iswc/#t=papers&k=PaperID&v=6> "2003"^^xsd:integer)
ClassAssertion(:papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541> "23541"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.Conference <http://foo.example/iswc/#t=papers&k=PaperID&v=6> <http://foo.example/iswc/#t=conferences&c=ConfID&v=23541>)
DataPropertyAssertion(:dp_papers.Publish <http://foo.example/iswc/#t=papers&k=PaperID&v=6> "0"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&k=PaperID&v=7>))
ClassAssertion(:papers <http://foo.example/iswc/#t=papers&k=PaperID&v=7>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&c=PaperID&v=7>))
ClassAssertion(:papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=7>)
DataPropertyAssertion(:dp_papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=7> "7"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.PaperID <http://foo.example/iswc/#t=papers&k=PaperID&v=7> <http://foo.example/iswc/#t=papers&c=PaperID&v=7>)
DataPropertyAssertion(:dp_papers.Title <http://foo.example/iswc/#t=papers&k=PaperID&v=7> "The Semantic Web Revisited"^^xsd:string)
DataPropertyAssertion(:dp_papers.Abstract <http://foo.example/iswc/#t=papers&k=PaperID&v=7> "The original Scientific American article on the Semantic Web appeared in 2001. It described the evolution of a Web that consisted largely of documents for humans to read to one that included data and information for computers to manipulate. The Semantic Web is a Web of actionable information--information derived from data through a semantic theory for interpreting the symbols.This simple idea, however, remains largely unrealized. Shopbots and auction bots abound on the Web, but these are essentially handcrafted for particular tasks; they have little ability to interact with heterogeneous data and information types. Because we haven't yet delivered large-scale, agent-based mediation, some commentators argue that the Semantic Web has failed to deliver. We argue that agents can only flourish when standards are well established and that the Web standards for expressing shared meaning have progressed steadily over the past five years. Furthermore, we see the use of ontologies in the e-science community presaging ultimate success for the Semantic Web--just as the use of HTTP within the CERN particle physics community led to the revolutionary success of the original Web. This article is part of a special issue on the Future of AI."^^xsd:string)
DataPropertyAssertion(:dp_papers.URI <http://foo.example/iswc/#t=papers&k=PaperID&v=7> "http://eprints.ecs.soton.ac.uk/12614/01/Semantic_Web_Revisted.pdf"^^xsd:string)
DataPropertyAssertion(:dp_papers.Year <http://foo.example/iswc/#t=papers&k=PaperID&v=7> "2006"^^xsd:integer)
DataPropertyAssertion(:dp_papers.Publish <http://foo.example/iswc/#t=papers&k=PaperID&v=7> "1"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&k=PaperID&v=8>))
ClassAssertion(:papers <http://foo.example/iswc/#t=papers&k=PaperID&v=8>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=papers&c=PaperID&v=8>))
ClassAssertion(:papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=8>)
DataPropertyAssertion(:dp_papers.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=8> "8"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.PaperID <http://foo.example/iswc/#t=papers&k=PaperID&v=8> <http://foo.example/iswc/#t=papers&c=PaperID&v=8>)
DataPropertyAssertion(:dp_papers.Title <http://foo.example/iswc/#t=papers&k=PaperID&v=8> "D2R Server - Publishing Relational Databases on the Web as SPARQL Endpoints"^^xsd:string)
DataPropertyAssertion(:dp_papers.Abstract <http://foo.example/iswc/#t=papers&k=PaperID&v=8> "The Resource Description Framework and the SPARQL query language provide a standardized way for exposing and linking data sources on the Web. D2R Server is a turn-key solution for making the content of existing, non-RDF databases accessible as SPARQL endpoints. The server takes SPARQL queries from the Web and rewrites them via a mapping into SQL queries against a relational database. This on-the-fly translation allows RDF applications to access the content of large databases without having to replicate them into RDF. D2R Server can be used to integrate existing databases into RDF systems, and to add SPARQL interfaces to database-backed software products. In the talk, we will give an introduction into the D2RQ mapping language, which is used to define mappings between relational and RDF schemata, and demonstrate how D2R Server can be used to extend a WordPress blog with a SPARQL interface."^^xsd:string)
DataPropertyAssertion(:dp_papers.URI <http://foo.example/iswc/#t=papers&k=PaperID&v=8> "http://www.wiwiss.fu-berlin.de/suhl/bizer/d2r-server/resources/d2r-server-slides-www2006.pdf"^^xsd:string)
DataPropertyAssertion(:dp_papers.Year <http://foo.example/iswc/#t=papers&k=PaperID&v=8> "2006"^^xsd:integer)
ClassAssertion(:papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23542>)
DataPropertyAssertion(:dp_papers.Conference <http://foo.example/iswc/#t=conferences&c=ConfID&v=23542> "23542"^^xsd:integer)
ObjectPropertyAssertion(:op_papers.Conference <http://foo.example/iswc/#t=papers&k=PaperID&v=8> <http://foo.example/iswc/#t=conferences&c=ConfID&v=23542>)
DataPropertyAssertion(:dp_papers.Publish <http://foo.example/iswc/#t=papers&k=PaperID&v=8> "1"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&k=PerID&v=1>))
ClassAssertion(:persons <http://foo.example/iswc/#t=persons&k=PerID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&c=PerID&v=1>))
ClassAssertion(:persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
DataPropertyAssertion(:dp_persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_persons.PerID <http://foo.example/iswc/#t=persons&k=PerID&v=1> <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
DataPropertyAssertion(:dp_persons.Type <http://foo.example/iswc/#t=persons&k=PerID&v=1> "Full_Professor"^^xsd:string)
DataPropertyAssertion(:dp_persons.FirstName <http://foo.example/iswc/#t=persons&k=PerID&v=1> "Yolanda"^^xsd:string)
DataPropertyAssertion(:dp_persons.LastName <http://foo.example/iswc/#t=persons&k=PerID&v=1> "Gil"^^xsd:string)
DataPropertyAssertion(:dp_persons.Email <http://foo.example/iswc/#t=persons&k=PerID&v=1> "gil@isi.edu"^^xsd:string)
DataPropertyAssertion(:dp_persons.Homepage <http://foo.example/iswc/#t=persons&k=PerID&v=1> "http://www.isi.edu/~gil"^^xsd:string)
DataPropertyAssertion(:dp_persons.Phone <http://foo.example/iswc/#t=persons&k=PerID&v=1> "310-448-8794"^^xsd:string)
DataPropertyAssertion(:dp_persons.URI <http://foo.example/iswc/#t=persons&k=PerID&v=1> "http://trellis.semanticweb.org/expect/web/semanticweb/iswc02_trellis.pdf#Yolanda Gil"^^xsd:string)
DataPropertyAssertion(:dp_persons.Photo <http://foo.example/iswc/#t=persons&k=PerID&v=1> "http://www.isi.edu/~gil/y.g.v4.tiff"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&k=PerID&v=2>))
ClassAssertion(:persons <http://foo.example/iswc/#t=persons&k=PerID&v=2>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&c=PerID&v=2>))
ClassAssertion(:persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
DataPropertyAssertion(:dp_persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_persons.PerID <http://foo.example/iswc/#t=persons&k=PerID&v=2> <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
DataPropertyAssertion(:dp_persons.FirstName <http://foo.example/iswc/#t=persons&k=PerID&v=2> "Varun"^^xsd:string)
DataPropertyAssertion(:dp_persons.LastName <http://foo.example/iswc/#t=persons&k=PerID&v=2> "Ratnakar"^^xsd:string)
DataPropertyAssertion(:dp_persons.Email <http://foo.example/iswc/#t=persons&k=PerID&v=2> "varunr@isi.edu"^^xsd:string)
DataPropertyAssertion(:dp_persons.Homepage <http://foo.example/iswc/#t=persons&k=PerID&v=2> "http://www.isi.edu/~varunr"^^xsd:string)
DataPropertyAssertion(:dp_persons.URI <http://foo.example/iswc/#t=persons&k=PerID&v=2> "http://trellis.semanticweb.org/expect/web/semanticweb/iswc02_trellis.pdf#Varun Ratnakar"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&k=PerID&v=3>))
ClassAssertion(:persons <http://foo.example/iswc/#t=persons&k=PerID&v=3>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&c=PerID&v=3>))
ClassAssertion(:persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=3>)
DataPropertyAssertion(:dp_persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_persons.PerID <http://foo.example/iswc/#t=persons&k=PerID&v=3> <http://foo.example/iswc/#t=persons&c=PerID&v=3>)
DataPropertyAssertion(:dp_persons.Type <http://foo.example/iswc/#t=persons&k=PerID&v=3> "Researcher"^^xsd:string)
DataPropertyAssertion(:dp_persons.FirstName <http://foo.example/iswc/#t=persons&k=PerID&v=3> "Jim"^^xsd:string)
DataPropertyAssertion(:dp_persons.LastName <http://foo.example/iswc/#t=persons&k=PerID&v=3> "Blythe"^^xsd:string)
DataPropertyAssertion(:dp_persons.Email <http://foo.example/iswc/#t=persons&k=PerID&v=3> "blythe@isi.edu"^^xsd:string)
DataPropertyAssertion(:dp_persons.Homepage <http://foo.example/iswc/#t=persons&k=PerID&v=3> "http://www.isi.edu/~varunr"^^xsd:string)
DataPropertyAssertion(:dp_persons.URI <http://foo.example/iswc/#t=persons&k=PerID&v=3> "http://trellis.semanticweb.org/expect/web/semanticweb/iswc02_trellis.pdf#Jim Blythe"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&k=PerID&v=4>))
ClassAssertion(:persons <http://foo.example/iswc/#t=persons&k=PerID&v=4>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&c=PerID&v=4>))
ClassAssertion(:persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=4>)
DataPropertyAssertion(:dp_persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_persons.PerID <http://foo.example/iswc/#t=persons&k=PerID&v=4> <http://foo.example/iswc/#t=persons&c=PerID&v=4>)
DataPropertyAssertion(:dp_persons.Type <http://foo.example/iswc/#t=persons&k=PerID&v=4> "Researcher"^^xsd:string)
DataPropertyAssertion(:dp_persons.FirstName <http://foo.example/iswc/#t=persons&k=PerID&v=4> "Andreas"^^xsd:string)
DataPropertyAssertion(:dp_persons.LastName <http://foo.example/iswc/#t=persons&k=PerID&v=4> "Eberhart"^^xsd:string)
DataPropertyAssertion(:dp_persons.Address <http://foo.example/iswc/#t=persons&k=PerID&v=4> "International University in Germany Campus 2 76646 Bruchsal Germany"^^xsd:string)
DataPropertyAssertion(:dp_persons.Email <http://foo.example/iswc/#t=persons&k=PerID&v=4> "eberhart@i-u.de"^^xsd:string)
DataPropertyAssertion(:dp_persons.Homepage <http://foo.example/iswc/#t=persons&k=PerID&v=4> "http://www.i-u.de/schools/eberhart/"^^xsd:string)
DataPropertyAssertion(:dp_persons.Phone <http://foo.example/iswc/#t=persons&k=PerID&v=4> "+49 7251 700 222"^^xsd:string)
DataPropertyAssertion(:dp_persons.URI <http://foo.example/iswc/#t=persons&k=PerID&v=4> "http://www.i-u.de/schools/eberhart/iswc2002/#Andreas Eberhart"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&k=PerID&v=5>))
ClassAssertion(:persons <http://foo.example/iswc/#t=persons&k=PerID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&c=PerID&v=5>))
ClassAssertion(:persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
DataPropertyAssertion(:dp_persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_persons.PerID <http://foo.example/iswc/#t=persons&k=PerID&v=5> <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
DataPropertyAssertion(:dp_persons.Type <http://foo.example/iswc/#t=persons&k=PerID&v=5> "Researcher"^^xsd:string)
DataPropertyAssertion(:dp_persons.FirstName <http://foo.example/iswc/#t=persons&k=PerID&v=5> "Borys"^^xsd:string)
DataPropertyAssertion(:dp_persons.LastName <http://foo.example/iswc/#t=persons&k=PerID&v=5> "Omelayenko"^^xsd:string)
DataPropertyAssertion(:dp_persons.Address <http://foo.example/iswc/#t=persons&k=PerID&v=5> "Vrije Universiteit, Division of Mathematics and Computer Science, De Boelelaan 1081a,1081hv, Amsterdam, The Netherlands"^^xsd:string)
DataPropertyAssertion(:dp_persons.Email <http://foo.example/iswc/#t=persons&k=PerID&v=5> "borys@cs.vu.nl"^^xsd:string)
DataPropertyAssertion(:dp_persons.Homepage <http://foo.example/iswc/#t=persons&k=PerID&v=5> "http://www.cs.vu.nl/~borys"^^xsd:string)
DataPropertyAssertion(:dp_persons.URI <http://foo.example/iswc/#t=persons&k=PerID&v=5> "http://www.cs.vu.nl/~borys#Bomelayenko"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&k=PerID&v=6>))
ClassAssertion(:persons <http://foo.example/iswc/#t=persons&k=PerID&v=6>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&c=PerID&v=6>))
ClassAssertion(:persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=6>)
DataPropertyAssertion(:dp_persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_persons.PerID <http://foo.example/iswc/#t=persons&k=PerID&v=6> <http://foo.example/iswc/#t=persons&c=PerID&v=6>)
DataPropertyAssertion(:dp_persons.Type <http://foo.example/iswc/#t=persons&k=PerID&v=6> "Researcher"^^xsd:string)
DataPropertyAssertion(:dp_persons.FirstName <http://foo.example/iswc/#t=persons&k=PerID&v=6> "Andy"^^xsd:string)
DataPropertyAssertion(:dp_persons.LastName <http://foo.example/iswc/#t=persons&k=PerID&v=6> "Seaborne"^^xsd:string)
DataPropertyAssertion(:dp_persons.Address <http://foo.example/iswc/#t=persons&k=PerID&v=6> "Hewlett-Packard Laboratories, Bristol, BS34 8QZ, UK"^^xsd:string)
DataPropertyAssertion(:dp_persons.Email <http://foo.example/iswc/#t=persons&k=PerID&v=6> "andy.seaborne@hpl.hp.com"^^xsd:string)
DataPropertyAssertion(:dp_persons.Homepage <http://foo.example/iswc/#t=persons&k=PerID&v=6> "http://www-uk.hpl.hp.com/people/afs/"^^xsd:string)
DataPropertyAssertion(:dp_persons.URI <http://foo.example/iswc/#t=persons&k=PerID&v=6> "http://www-uk.hpl.hp.com/people#andy_seaborne"^^xsd:string)
DataPropertyAssertion(:dp_persons.Photo <http://foo.example/iswc/#t=persons&k=PerID&v=6> "http://semtech2011.semanticweb.com/uploads/images/bios/3205.jpg"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&k=PerID&v=9>))
ClassAssertion(:persons <http://foo.example/iswc/#t=persons&k=PerID&v=9>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&c=PerID&v=9>))
ClassAssertion(:persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=9>)
DataPropertyAssertion(:dp_persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=9> "9"^^xsd:integer)
ObjectPropertyAssertion(:op_persons.PerID <http://foo.example/iswc/#t=persons&k=PerID&v=9> <http://foo.example/iswc/#t=persons&c=PerID&v=9>)
DataPropertyAssertion(:dp_persons.FirstName <http://foo.example/iswc/#t=persons&k=PerID&v=9> "Alberto"^^xsd:string)
DataPropertyAssertion(:dp_persons.LastName <http://foo.example/iswc/#t=persons&k=PerID&v=9> "Reggiori"^^xsd:string)
DataPropertyAssertion(:dp_persons.Email <http://foo.example/iswc/#t=persons&k=PerID&v=9> "areggiori@webweaving.org"^^xsd:string)
DataPropertyAssertion(:dp_persons.Homepage <http://foo.example/iswc/#t=persons&k=PerID&v=9> "http://reggiori.webweaving.org/"^^xsd:string)
DataPropertyAssertion(:dp_persons.URI <http://foo.example/iswc/#t=persons&k=PerID&v=9> "http://reggiori.webweaving.org#Alberto Reggiori"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&k=PerID&v=10>))
ClassAssertion(:persons <http://foo.example/iswc/#t=persons&k=PerID&v=10>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&c=PerID&v=10>))
ClassAssertion(:persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
DataPropertyAssertion(:dp_persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=10> "10"^^xsd:integer)
ObjectPropertyAssertion(:op_persons.PerID <http://foo.example/iswc/#t=persons&k=PerID&v=10> <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
DataPropertyAssertion(:dp_persons.Type <http://foo.example/iswc/#t=persons&k=PerID&v=10> "Full_Professor"^^xsd:string)
DataPropertyAssertion(:dp_persons.FirstName <http://foo.example/iswc/#t=persons&k=PerID&v=10> "Sonia"^^xsd:string)
DataPropertyAssertion(:dp_persons.LastName <http://foo.example/iswc/#t=persons&k=PerID&v=10> "Bergamaschi"^^xsd:string)
DataPropertyAssertion(:dp_persons.Address <http://foo.example/iswc/#t=persons&k=PerID&v=10> "DII- Universita di Modena e Reggio Emilia via Vignolese 905 41100 Modena"^^xsd:string)
DataPropertyAssertion(:dp_persons.Email <http://foo.example/iswc/#t=persons&k=PerID&v=10> "bergamaschi.sonia@unimo.it"^^xsd:string)
DataPropertyAssertion(:dp_persons.Homepage <http://foo.example/iswc/#t=persons&k=PerID&v=10> "http://www.dbgroup.unimo.it/Bergamaschi.html"^^xsd:string)
DataPropertyAssertion(:dp_persons.Phone <http://foo.example/iswc/#t=persons&k=PerID&v=10> "+39 059 2056132"^^xsd:string)
DataPropertyAssertion(:dp_persons.URI <http://foo.example/iswc/#t=persons&k=PerID&v=10> "http://www.dbgroup.unimo.it/iswc/iswc.html#S. Bergamaschi"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&k=PerID&v=11>))
ClassAssertion(:persons <http://foo.example/iswc/#t=persons&k=PerID&v=11>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&c=PerID&v=11>))
ClassAssertion(:persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=11>)
DataPropertyAssertion(:dp_persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=11> "11"^^xsd:integer)
ObjectPropertyAssertion(:op_persons.PerID <http://foo.example/iswc/#t=persons&k=PerID&v=11> <http://foo.example/iswc/#t=persons&c=PerID&v=11>)
DataPropertyAssertion(:dp_persons.FirstName <http://foo.example/iswc/#t=persons&k=PerID&v=11> "Francesco"^^xsd:string)
DataPropertyAssertion(:dp_persons.LastName <http://foo.example/iswc/#t=persons&k=PerID&v=11> "Guerra"^^xsd:string)
DataPropertyAssertion(:dp_persons.Address <http://foo.example/iswc/#t=persons&k=PerID&v=11> "DII- Universita di Modena e Reggio Emilia via Vignolese 905 41100 Modena Italy"^^xsd:string)
DataPropertyAssertion(:dp_persons.Email <http://foo.example/iswc/#t=persons&k=PerID&v=11> "guerra.francesco@unimo.it"^^xsd:string)
DataPropertyAssertion(:dp_persons.Homepage <http://foo.example/iswc/#t=persons&k=PerID&v=11> "http://www.dbgroup.unimo.it/~guerra/"^^xsd:string)
DataPropertyAssertion(:dp_persons.Phone <http://foo.example/iswc/#t=persons&k=PerID&v=11> "+39 059 20561543"^^xsd:string)
DataPropertyAssertion(:dp_persons.URI <http://foo.example/iswc/#t=persons&k=PerID&v=11> "http://www.dbgroup.unimo.it/iswc/iswc.html#F. Guerra"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&k=PerID&v=12>))
ClassAssertion(:persons <http://foo.example/iswc/#t=persons&k=PerID&v=12>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=persons&c=PerID&v=12>))
ClassAssertion(:persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=12>)
DataPropertyAssertion(:dp_persons.PerID <http://foo.example/iswc/#t=persons&c=PerID&v=12> "12"^^xsd:integer)
ObjectPropertyAssertion(:op_persons.PerID <http://foo.example/iswc/#t=persons&k=PerID&v=12> <http://foo.example/iswc/#t=persons&c=PerID&v=12>)
DataPropertyAssertion(:dp_persons.Type <http://foo.example/iswc/#t=persons&k=PerID&v=12> "Researcher"^^xsd:string)
DataPropertyAssertion(:dp_persons.FirstName <http://foo.example/iswc/#t=persons&k=PerID&v=12> "Christian"^^xsd:string)
DataPropertyAssertion(:dp_persons.LastName <http://foo.example/iswc/#t=persons&k=PerID&v=12> "Bizer"^^xsd:string)
DataPropertyAssertion(:dp_persons.Address <http://foo.example/iswc/#t=persons&k=PerID&v=12> "Freie Universität Berlin"^^xsd:string)
DataPropertyAssertion(:dp_persons.Email <http://foo.example/iswc/#t=persons&k=PerID&v=12> "chris@bizer.de"^^xsd:string)
DataPropertyAssertion(:dp_persons.Homepage <http://foo.example/iswc/#t=persons&k=PerID&v=12> "http://www.bizer.de/"^^xsd:string)
DataPropertyAssertion(:dp_persons.URI <http://foo.example/iswc/#t=persons&k=PerID&v=12> "http://www.bizer.de/foaf.rdf#chris"^^xsd:string)
DataPropertyAssertion(:dp_persons.Photo <http://foo.example/iswc/#t=persons&k=PerID&v=12> "http://www.wiwiss.fu-berlin.de/en/institute/pwo/bizer/pics/bizer_christian_200x300.png"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=1&k=TopicID&v=5>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=1&k=TopicID&v=5>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=1>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=1&k=TopicID&v=5> <http://foo.example/iswc/#t=papers&c=PaperID&v=1>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=1&k=TopicID&v=5> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=1&k=TopicID&v=5> "1"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=1&k=TopicID&v=15>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=1&k=TopicID&v=15>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=1>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=1&k=TopicID&v=15> <http://foo.example/iswc/#t=papers&c=PaperID&v=1>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=15>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=15> "15"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=1&k=TopicID&v=15> <http://foo.example/iswc/#t=topics&c=TopicID&v=15>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=1&k=TopicID&v=15> "2"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=2&k=TopicID&v=3>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=2&k=TopicID&v=3>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=2>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=2&k=TopicID&v=3> <http://foo.example/iswc/#t=papers&c=PaperID&v=2>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=2&k=TopicID&v=3> <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=2&k=TopicID&v=3> "3"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=2&k=TopicID&v=5>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=2&k=TopicID&v=5>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=2>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=2&k=TopicID&v=5> <http://foo.example/iswc/#t=papers&c=PaperID&v=2>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=2&k=TopicID&v=5> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=2&k=TopicID&v=5> "2"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=10>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=10>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=10> <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=10>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=10> "10"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=10> <http://foo.example/iswc/#t=topics&c=TopicID&v=10>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=10> "2"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=11>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=11>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=11> <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=11>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=11> "11"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=11> <http://foo.example/iswc/#t=topics&c=TopicID&v=11>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=11> "1"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=14>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=14>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=14> <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=14>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=14> "14"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=14> <http://foo.example/iswc/#t=topics&c=TopicID&v=14>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=4&k=TopicID&v=14> "2"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=2>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=2>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=2> <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=2>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=2> <http://foo.example/iswc/#t=topics&c=TopicID&v=2>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=2> "3"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=3>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=3>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=3> <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=3> <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=3> "1"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=13>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=13>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=13> <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=13>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=13> "13"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=13> <http://foo.example/iswc/#t=topics&c=TopicID&v=13>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=5&k=TopicID&v=13> "2"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=5>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=5>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=6>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=5> <http://foo.example/iswc/#t=papers&c=PaperID&v=6>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=5> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=5> "2"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=11>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=11>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=6>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=11> <http://foo.example/iswc/#t=papers&c=PaperID&v=6>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=11>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=11> "11"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=11> <http://foo.example/iswc/#t=topics&c=TopicID&v=11>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=11> "1"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=13>))
ClassAssertion(:rel_paper_topic <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=13>)
ClassAssertion(:rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=6>)
DataPropertyAssertion(:dp_rel_paper_topic.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.PaperID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=13> <http://foo.example/iswc/#t=papers&c=PaperID&v=6>)
ClassAssertion(:rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=13>)
DataPropertyAssertion(:dp_rel_paper_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=13> "13"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_paper_topic.TopicID <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=13> <http://foo.example/iswc/#t=topics&c=TopicID&v=13>)
DataPropertyAssertion(:dp_rel_paper_topic.RelationType <http://foo.example/iswc/#t=rel_paper_topic&k=PaperID&v=6&k=TopicID&v=13> "3"^^xsd:integer)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=1&k=OrganizationID&v=1>))
ClassAssertion(:rel_person_organization <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=1&k=OrganizationID&v=1>)
ClassAssertion(:rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
DataPropertyAssertion(:dp_rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.PersonID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=1&k=OrganizationID&v=1> <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
ClassAssertion(:rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=1>)
DataPropertyAssertion(:dp_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=1&k=OrganizationID&v=1> <http://foo.example/iswc/#t=organizations&c=OrgID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=2&k=OrganizationID&v=1>))
ClassAssertion(:rel_person_organization <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=2&k=OrganizationID&v=1>)
ClassAssertion(:rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
DataPropertyAssertion(:dp_rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.PersonID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=2&k=OrganizationID&v=1> <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
ClassAssertion(:rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=1>)
DataPropertyAssertion(:dp_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=2&k=OrganizationID&v=1> <http://foo.example/iswc/#t=organizations&c=OrgID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=3&k=OrganizationID&v=1>))
ClassAssertion(:rel_person_organization <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=3&k=OrganizationID&v=1>)
ClassAssertion(:rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=3>)
DataPropertyAssertion(:dp_rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.PersonID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=3&k=OrganizationID&v=1> <http://foo.example/iswc/#t=persons&c=PerID&v=3>)
ClassAssertion(:rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=1>)
DataPropertyAssertion(:dp_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=3&k=OrganizationID&v=1> <http://foo.example/iswc/#t=organizations&c=OrgID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=4&k=OrganizationID&v=3>))
ClassAssertion(:rel_person_organization <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=4&k=OrganizationID&v=3>)
ClassAssertion(:rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=4>)
DataPropertyAssertion(:dp_rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.PersonID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=4&k=OrganizationID&v=3> <http://foo.example/iswc/#t=persons&c=PerID&v=4>)
ClassAssertion(:rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=3>)
DataPropertyAssertion(:dp_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=4&k=OrganizationID&v=3> <http://foo.example/iswc/#t=organizations&c=OrgID&v=3>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=5&k=OrganizationID&v=5>))
ClassAssertion(:rel_person_organization <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=5&k=OrganizationID&v=5>)
ClassAssertion(:rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
DataPropertyAssertion(:dp_rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.PersonID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=5&k=OrganizationID&v=5> <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
ClassAssertion(:rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=5>)
DataPropertyAssertion(:dp_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=5&k=OrganizationID&v=5> <http://foo.example/iswc/#t=organizations&c=OrgID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=5&k=OrganizationID&v=6>))
ClassAssertion(:rel_person_organization <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=5&k=OrganizationID&v=6>)
ClassAssertion(:rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
DataPropertyAssertion(:dp_rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.PersonID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=5&k=OrganizationID&v=6> <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
ClassAssertion(:rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=6>)
DataPropertyAssertion(:dp_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=5&k=OrganizationID&v=6> <http://foo.example/iswc/#t=organizations&c=OrgID&v=6>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=6&k=OrganizationID&v=7>))
ClassAssertion(:rel_person_organization <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=6&k=OrganizationID&v=7>)
ClassAssertion(:rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=6>)
DataPropertyAssertion(:dp_rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.PersonID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=6&k=OrganizationID&v=7> <http://foo.example/iswc/#t=persons&c=PerID&v=6>)
ClassAssertion(:rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=7>)
DataPropertyAssertion(:dp_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=7> "7"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=6&k=OrganizationID&v=7> <http://foo.example/iswc/#t=organizations&c=OrgID&v=7>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=9&k=OrganizationID&v=8>))
ClassAssertion(:rel_person_organization <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=9&k=OrganizationID&v=8>)
ClassAssertion(:rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=9>)
DataPropertyAssertion(:dp_rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=9> "9"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.PersonID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=9&k=OrganizationID&v=8> <http://foo.example/iswc/#t=persons&c=PerID&v=9>)
ClassAssertion(:rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=8>)
DataPropertyAssertion(:dp_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=8> "8"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=9&k=OrganizationID&v=8> <http://foo.example/iswc/#t=organizations&c=OrgID&v=8>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=10&k=OrganizationID&v=9>))
ClassAssertion(:rel_person_organization <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=10&k=OrganizationID&v=9>)
ClassAssertion(:rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
DataPropertyAssertion(:dp_rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=10> "10"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.PersonID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=10&k=OrganizationID&v=9> <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
ClassAssertion(:rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=9>)
DataPropertyAssertion(:dp_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=9> "9"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=10&k=OrganizationID&v=9> <http://foo.example/iswc/#t=organizations&c=OrgID&v=9>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=11&k=OrganizationID&v=9>))
ClassAssertion(:rel_person_organization <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=11&k=OrganizationID&v=9>)
ClassAssertion(:rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=11>)
DataPropertyAssertion(:dp_rel_person_organization.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=11> "11"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.PersonID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=11&k=OrganizationID&v=9> <http://foo.example/iswc/#t=persons&c=PerID&v=11>)
ClassAssertion(:rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=9>)
DataPropertyAssertion(:dp_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=organizations&c=OrgID&v=9> "9"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_organization.OrganizationID <http://foo.example/iswc/#t=rel_person_organization&k=PersonID&v=11&k=OrganizationID&v=9> <http://foo.example/iswc/#t=organizations&c=OrgID&v=9>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=1&k=PaperID&v=1>))
ClassAssertion(:rel_person_paper <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=1&k=PaperID&v=1>)
ClassAssertion(:rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
DataPropertyAssertion(:dp_rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PersonID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=1&k=PaperID&v=1> <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
ClassAssertion(:rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=1>)
DataPropertyAssertion(:dp_rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PaperID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=1&k=PaperID&v=1> <http://foo.example/iswc/#t=papers&c=PaperID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=2&k=PaperID&v=1>))
ClassAssertion(:rel_person_paper <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=2&k=PaperID&v=1>)
ClassAssertion(:rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
DataPropertyAssertion(:dp_rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PersonID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=2&k=PaperID&v=1> <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
ClassAssertion(:rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=1>)
DataPropertyAssertion(:dp_rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PaperID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=2&k=PaperID&v=1> <http://foo.example/iswc/#t=papers&c=PaperID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=4&k=PaperID&v=2>))
ClassAssertion(:rel_person_paper <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=4&k=PaperID&v=2>)
ClassAssertion(:rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=4>)
DataPropertyAssertion(:dp_rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PersonID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=4&k=PaperID&v=2> <http://foo.example/iswc/#t=persons&c=PerID&v=4>)
ClassAssertion(:rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=2>)
DataPropertyAssertion(:dp_rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PaperID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=4&k=PaperID&v=2> <http://foo.example/iswc/#t=papers&c=PaperID&v=2>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=5&k=PaperID&v=6>))
ClassAssertion(:rel_person_paper <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=5&k=PaperID&v=6>)
ClassAssertion(:rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
DataPropertyAssertion(:dp_rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PersonID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=5&k=PaperID&v=6> <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
ClassAssertion(:rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=6>)
DataPropertyAssertion(:dp_rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PaperID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=5&k=PaperID&v=6> <http://foo.example/iswc/#t=papers&c=PaperID&v=6>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=6&k=PaperID&v=4>))
ClassAssertion(:rel_person_paper <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=6&k=PaperID&v=4>)
ClassAssertion(:rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=6>)
DataPropertyAssertion(:dp_rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PersonID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=6&k=PaperID&v=4> <http://foo.example/iswc/#t=persons&c=PerID&v=6>)
ClassAssertion(:rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
DataPropertyAssertion(:dp_rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PaperID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=6&k=PaperID&v=4> <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=9&k=PaperID&v=4>))
ClassAssertion(:rel_person_paper <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=9&k=PaperID&v=4>)
ClassAssertion(:rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=9>)
DataPropertyAssertion(:dp_rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=9> "9"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PersonID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=9&k=PaperID&v=4> <http://foo.example/iswc/#t=persons&c=PerID&v=9>)
ClassAssertion(:rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
DataPropertyAssertion(:dp_rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PaperID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=9&k=PaperID&v=4> <http://foo.example/iswc/#t=papers&c=PaperID&v=4>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=10&k=PaperID&v=5>))
ClassAssertion(:rel_person_paper <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=10&k=PaperID&v=5>)
ClassAssertion(:rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
DataPropertyAssertion(:dp_rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=10> "10"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PersonID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=10&k=PaperID&v=5> <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
ClassAssertion(:rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
DataPropertyAssertion(:dp_rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PaperID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=10&k=PaperID&v=5> <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=11&k=PaperID&v=5>))
ClassAssertion(:rel_person_paper <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=11&k=PaperID&v=5>)
ClassAssertion(:rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=11>)
DataPropertyAssertion(:dp_rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=11> "11"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PersonID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=11&k=PaperID&v=5> <http://foo.example/iswc/#t=persons&c=PerID&v=11>)
ClassAssertion(:rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
DataPropertyAssertion(:dp_rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PaperID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=11&k=PaperID&v=5> <http://foo.example/iswc/#t=papers&c=PaperID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=12&k=PaperID&v=8>))
ClassAssertion(:rel_person_paper <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=12&k=PaperID&v=8>)
ClassAssertion(:rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=12>)
DataPropertyAssertion(:dp_rel_person_paper.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=12> "12"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PersonID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=12&k=PaperID&v=8> <http://foo.example/iswc/#t=persons&c=PerID&v=12>)
ClassAssertion(:rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=8>)
DataPropertyAssertion(:dp_rel_person_paper.PaperID <http://foo.example/iswc/#t=papers&c=PaperID&v=8> "8"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_paper.PaperID <http://foo.example/iswc/#t=rel_person_paper&k=PersonID&v=12&k=PaperID&v=8> <http://foo.example/iswc/#t=papers&c=PaperID&v=8>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=1>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=1>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=1> <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=1>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=1> <http://foo.example/iswc/#t=topics&c=TopicID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=2>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=2>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=2> <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=2>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=2> <http://foo.example/iswc/#t=topics&c=TopicID&v=2>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=3>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=3>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=3> <http://foo.example/iswc/#t=persons&c=PerID&v=1>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=1&k=TopicID&v=3> <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=5>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=5>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=5> <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=5> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=6>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=6>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=6> <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=6>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=6> <http://foo.example/iswc/#t=topics&c=TopicID&v=6>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=7>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=7>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=7> <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=7>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=7> "7"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=7> <http://foo.example/iswc/#t=topics&c=TopicID&v=7>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=8>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=8>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=8> <http://foo.example/iswc/#t=persons&c=PerID&v=2>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=8>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=8> "8"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=2&k=TopicID&v=8> <http://foo.example/iswc/#t=topics&c=TopicID&v=8>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=1>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=1>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=3>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=1> <http://foo.example/iswc/#t=persons&c=PerID&v=3>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=1>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=1> <http://foo.example/iswc/#t=topics&c=TopicID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=2>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=2>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=3>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=2> <http://foo.example/iswc/#t=persons&c=PerID&v=3>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=2>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=2> <http://foo.example/iswc/#t=topics&c=TopicID&v=2>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=3>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=3>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=3>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=3> <http://foo.example/iswc/#t=persons&c=PerID&v=3>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=3&k=TopicID&v=3> <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=4&k=TopicID&v=1>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=4&k=TopicID&v=1>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=4>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=4&k=TopicID&v=1> <http://foo.example/iswc/#t=persons&c=PerID&v=4>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=1>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=4&k=TopicID&v=1> <http://foo.example/iswc/#t=topics&c=TopicID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=5>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=5>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=5> <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=5> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=7>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=7>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=7> <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=7>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=7> "7"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=7> <http://foo.example/iswc/#t=topics&c=TopicID&v=7>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=13>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=13>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=13> <http://foo.example/iswc/#t=persons&c=PerID&v=5>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=13>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=13> "13"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=5&k=TopicID&v=13> <http://foo.example/iswc/#t=topics&c=TopicID&v=13>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=6&k=TopicID&v=5>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=6&k=TopicID&v=5>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=6>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=6&k=TopicID&v=5> <http://foo.example/iswc/#t=persons&c=PerID&v=6>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=6&k=TopicID&v=5> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=9&k=TopicID&v=5>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=9&k=TopicID&v=5>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=9>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=9> "9"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=9&k=TopicID&v=5> <http://foo.example/iswc/#t=persons&c=PerID&v=9>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=9&k=TopicID&v=5> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=5>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=5>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=10> "10"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=5> <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=5> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=10>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=10>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=10> "10"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=10> <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=10>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=10> "10"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=10> <http://foo.example/iswc/#t=topics&c=TopicID&v=10>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=15>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=15>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=10> "10"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=15> <http://foo.example/iswc/#t=persons&c=PerID&v=10>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=15>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=15> "15"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=10&k=TopicID&v=15> <http://foo.example/iswc/#t=topics&c=TopicID&v=15>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=11&k=TopicID&v=5>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=11&k=TopicID&v=5>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=11>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=11> "11"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=11&k=TopicID&v=5> <http://foo.example/iswc/#t=persons&c=PerID&v=11>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=11&k=TopicID&v=5> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=11&k=TopicID&v=10>))
ClassAssertion(:rel_person_topic <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=11&k=TopicID&v=10>)
ClassAssertion(:rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=11>)
DataPropertyAssertion(:dp_rel_person_topic.PersonID <http://foo.example/iswc/#t=persons&c=PerID&v=11> "11"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.PersonID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=11&k=TopicID&v=10> <http://foo.example/iswc/#t=persons&c=PerID&v=11>)
ClassAssertion(:rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=10>)
DataPropertyAssertion(:dp_rel_person_topic.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=10> "10"^^xsd:integer)
ObjectPropertyAssertion(:op_rel_person_topic.TopicID <http://foo.example/iswc/#t=rel_person_topic&k=PersonID&v=11&k=TopicID&v=10> <http://foo.example/iswc/#t=topics&c=TopicID&v=10>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=1>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=1>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=1>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=1>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=1> "1"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=1> <http://foo.example/iswc/#t=topics&c=TopicID&v=1>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=1> "Knowledge Representation Languages"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=1> "http://annotation.semanticweb.org/iswc/iswc.daml#Knowledge_Representation_Languages"^^xsd:string)
ClassAssertion(:topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
DataPropertyAssertion(:dp_topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.ParentID <http://foo.example/iswc/#t=topics&k=TopicID&v=1> <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=2>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=2>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=2>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=2>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=2> "2"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=2> <http://foo.example/iswc/#t=topics&c=TopicID&v=2>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=2> "Knowledge Systems"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=2> "http://annotation.semanticweb.org/iswc/iswc.daml#Knowledge_Systems"^^xsd:string)
ClassAssertion(:topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=15>)
DataPropertyAssertion(:dp_topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=15> "15"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.ParentID <http://foo.example/iswc/#t=topics&k=TopicID&v=2> <http://foo.example/iswc/#t=topics&c=TopicID&v=15>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=3>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=3>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=3>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=3> <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=3> "Artificial Intelligence"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=3> "http://annotation.semanticweb.org/iswc/iswc.daml#Artificial_Intelligence"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=4>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=4>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=4>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=4>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=4> "4"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=4> <http://foo.example/iswc/#t=topics&c=TopicID&v=4>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=4> "Semantic Annotation"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=4> "http://annotation.semanticweb.org/iswc/iswc.daml#Semantic_Annotation"^^xsd:string)
ClassAssertion(:topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.ParentID <http://foo.example/iswc/#t=topics&k=TopicID&v=4> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=5>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=5>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=5> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=5> "Semantic Web"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=5> "http://annotation.semanticweb.org/iswc/iswc.daml#Semantic_Web"^^xsd:string)
ClassAssertion(:topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=8>)
DataPropertyAssertion(:dp_topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=8> "8"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.ParentID <http://foo.example/iswc/#t=topics&k=TopicID&v=5> <http://foo.example/iswc/#t=topics&c=TopicID&v=8>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=6>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=6>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=6>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=6>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=6> "6"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=6> <http://foo.example/iswc/#t=topics&c=TopicID&v=6>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=6> "Semantic Web Languages"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=6> "http://annotation.semanticweb.org/iswc/iswc.daml#Semantic_Web_Languages"^^xsd:string)
ClassAssertion(:topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.ParentID <http://foo.example/iswc/#t=topics&k=TopicID&v=6> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=7>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=7>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=7>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=7>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=7> "7"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=7> <http://foo.example/iswc/#t=topics&c=TopicID&v=7>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=7> "Web Services"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=7> "http://annotation.semanticweb.org/iswc/iswc.daml#Web_Services"^^xsd:string)
ClassAssertion(:topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=8>)
DataPropertyAssertion(:dp_topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=8> "8"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.ParentID <http://foo.example/iswc/#t=topics&k=TopicID&v=7> <http://foo.example/iswc/#t=topics&c=TopicID&v=8>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=8>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=8>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=8>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=8>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=8> "8"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=8> <http://foo.example/iswc/#t=topics&c=TopicID&v=8>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=8> "World Wide Web"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=8> "http://annotation.semanticweb.org/iswc/iswc.daml#World_Wide_Web"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=9>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=9>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=9>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=9>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=9> "9"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=9> <http://foo.example/iswc/#t=topics&c=TopicID&v=9>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=9> "Text Mining"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=9> "http://annotation.semanticweb.org/iswc/iswc.daml#Text_Mining"^^xsd:string)
ClassAssertion(:topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=16>)
DataPropertyAssertion(:dp_topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=16> "16"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.ParentID <http://foo.example/iswc/#t=topics&k=TopicID&v=9> <http://foo.example/iswc/#t=topics&c=TopicID&v=16>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=10>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=10>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=10>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=10>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=10> "10"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=10> <http://foo.example/iswc/#t=topics&c=TopicID&v=10>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=10> "Databases"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=10> "http://annotation.semanticweb.org/iswc/iswc.daml#Databases"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=11>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=11>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=11>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=11>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=11> "11"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=11> <http://foo.example/iswc/#t=topics&c=TopicID&v=11>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=11> "Semantic Web Infrastructure"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=11> "http://annotation.semanticweb.org/iswc/iswc.daml#Semantic_Web_Iinfrastructure"^^xsd:string)
ClassAssertion(:topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
DataPropertyAssertion(:dp_topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=5> "5"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.ParentID <http://foo.example/iswc/#t=topics&k=TopicID&v=11> <http://foo.example/iswc/#t=topics&c=TopicID&v=5>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=13>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=13>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=13>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=13>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=13> "13"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=13> <http://foo.example/iswc/#t=topics&c=TopicID&v=13>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=13> "E-Business"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=13> "http://annotation.semanticweb.org/iswc/iswc.daml#e-Business"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=14>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=14>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=14>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=14>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=14> "14"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=14> <http://foo.example/iswc/#t=topics&c=TopicID&v=14>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=14> "Query Languages"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=14> "http://annotation.semanticweb.org/iswc/iswc.daml#Query_Languages"^^xsd:string)
ClassAssertion(:topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=16>)
DataPropertyAssertion(:dp_topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=16> "16"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.ParentID <http://foo.example/iswc/#t=topics&k=TopicID&v=14> <http://foo.example/iswc/#t=topics&c=TopicID&v=16>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=15>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=15>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=15>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=15>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=15> "15"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=15> <http://foo.example/iswc/#t=topics&c=TopicID&v=15>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=15> "Knowledge Management"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=15> "http://annotation.semanticweb.org/iswc/iswc.daml#Knowledge_Management"^^xsd:string)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&k=TopicID&v=16>))
ClassAssertion(:topics <http://foo.example/iswc/#t=topics&k=TopicID&v=16>)
Declaration(NamedIndividual(<http://foo.example/iswc/#t=topics&c=TopicID&v=16>))
ClassAssertion(:topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=16>)
DataPropertyAssertion(:dp_topics.TopicID <http://foo.example/iswc/#t=topics&c=TopicID&v=16> "16"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.TopicID <http://foo.example/iswc/#t=topics&k=TopicID&v=16> <http://foo.example/iswc/#t=topics&c=TopicID&v=16>)
DataPropertyAssertion(:dp_topics.TopicName <http://foo.example/iswc/#t=topics&k=TopicID&v=16> "Knowledge Discovery"^^xsd:string)
DataPropertyAssertion(:dp_topics.URI <http://foo.example/iswc/#t=topics&k=TopicID&v=16> "http://annotation.semanticweb.org/iswc/iswc.daml#Knowledge_Discovery"^^xsd:string)
ClassAssertion(:topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
DataPropertyAssertion(:dp_topics.ParentID <http://foo.example/iswc/#t=topics&c=TopicID&v=3> "3"^^xsd:integer)
ObjectPropertyAssertion(:op_topics.ParentID <http://foo.example/iswc/#t=topics&k=TopicID&v=16> <http://foo.example/iswc/#t=topics&c=TopicID&v=3>)
)